type Note {
    id: ID!
    title: String!
    content: String!
    ownerId: String!
    createdAt: String!
    updatedAt: String!
    linkedNotes: [Note!]!
    permissions: [NotePermission!]!
}

type NotePermission {
    userId: String!
    role: PermissionRole!
}

enum PermissionRole {
    OWNER
    EDITOR
    OBSERVER
}

type Query {
    note(id: ID!): Note
    notes: [Note!]!
    notesByUser(userId: String!): [Note!]!
    linkedNotes(noteId: ID!): [Note!]!
}

type Mutation {
    createNote(title: String!, content: String!): Note!
    updateNote(id: ID!, title: String, content: String): Note!
    deleteNote(id: ID!): Boolean!
    linkNotes(fromNoteId: ID!, toNoteId: ID!): Boolean!
    shareNote(noteId: ID!, userId: String!, role: PermissionRole!): Boolean!
}
